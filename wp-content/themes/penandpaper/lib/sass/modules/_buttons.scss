/******************************************************************
Site Name:
Author:

Stylesheet: Button Styles

Buttons are a pretty important part of your site's style, so it's
important to have a consistent baseline for them. Use this stylesheet
to create all kinds of buttons.

Helpful Links:
http://galp.in/blog/2011/08/02/the-ui-guide-part-1-buttons/

******************************************************************/

/*********************
BUTTON DEFAULTS
We're gonna use a placeholder selector here
so we can use common styles. We then use this
to load up the defaults in all our buttons.

Here's a quick video to show how it works:
http://www.youtube.com/watch?v=hwdVpKiJzac

*********************/

%btn {
  display: inline-block;
  position: relative;
  font-family: $sans-serif;
  text-decoration: none;
  color: purple;
  font-size: 0.9em;
  font-size: 34px;
  line-height: 34px;
  font-weight: normal;
  padding: 0 24px;
  border-radius: 4px;
  border: 0;
  cursor: pointer;
  @include transition(background-color 0.14s ease-in-out);

  // hovering on the btn
  &:hover, &:focus {
    color: $white;
    text-decoration: none;
  } // end hover

  // clicking on the button
  &:active {
    top: 1px; // adds a tiny hop to the click
  } // end active

} // end .button


/* BUTTONS
 * ------------------------------------------------ */
.button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  display: block;
  text-align: center;
  margin: 0 auto 1em auto;
  clear: both;
  @include linear-gradient(bottom, ($linkColor, 0%) , ($backgroundColor, 75%), true);
  border: 1px solid $fontColor;
  @include border-radius(3px);
  padding: 8px 10px;
  color: $fontColor;
  &:hover {
    color: $linkColor;
    @include linear-gradient(bottom, ($linkHoverColor, 0%) , ($backgroundColor, 75%), true);
    border: 1px solid $linkColor;
  }
  &:active {
    border: 1px solid #666;
    background: #cccccc -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(255, 255, 255, 0.35)), color-stop(100%, rgba(10, 10, 10, 0.4)));
    background: #cccccc -webkit-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);
    background: #cccccc -moz-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);
    background: #cccccc -o-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);
    background: #cccccc linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);
  }
  &.full-width {
    width: 100%;
    padding-left: 0 !important;
    padding-right: 0 !important;
    text-align: center;
  }
  &.smaller {
    font-size: $fontSize - 2;
    padding: 4px 5px;
  }
  &.larger {
    font-size: $fontSize + 2;
    padding: 10px 18px;
  }
}

/* Fix for odd Mozilla border & padding issues */
button,
input {
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}



/*
An example button.
You can use this example if you want. Just replace all the variables
and it will create a button dependant on those variables.
*/
.blue-btn {
  @extend %btn; // here we load the btn defaults
  background-color: $blue;

  &:hover,
  &:focus {
    background-color: darken($blue, 4%);
  } // end hover

  &:active {
    background-color: darken($blue, 5%);
  } // end active

} // end blue button
